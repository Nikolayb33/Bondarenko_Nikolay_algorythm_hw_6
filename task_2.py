"""
Задание 2.

Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.

Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.

Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение
"""

"""
проблема с рекурсией, что на каждый вызов создается отдельная таблица
она решается дополнитеьной оберткой, которая вызывает функцию , которую нужно профилировать
"""


from memory_profiler import profile


def recursive_reverse(number):
    if number == 0:
        return str(number % 10)
    return f'{str(number % 10)}{recursive_reverse(number // 10)}'


@profile
def test_for_recur():
    recursive_reverse(1000)


if __name__ == '__main__':
    test_for_recur()

# Line #    Mem usage    Increment  Occurrences   Line Contents
# =============================================================
#     44     13.9 MiB     13.9 MiB           1   @profile
#     45                                         def test_for_recur():
#     46     13.9 MiB      0.0 MiB           1       recursive_reverse(1000)
#
# Проблема при профилировании памяти в скрипте с рекурсией возникает из-за
# того, что с каждым вызовом функции происходит профилирование.
# Эта проблема решается с помощью обертывания функцией и профилирование памяти необходимо уже
# производить именно этой функции. Тогда профилирование будет происходить один раз.